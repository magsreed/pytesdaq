########################################################
#
# Data taking configuration
#
# 3 types: continuous, randoms, didv
#
# Usage example, 2 hours continuous data:
#
#    python bin/run_daq.py -c A,B,D --acquire-cont
#           --duration 2h --comment "this is a comment"
#           --run_purpose 1
#
########################################################


[continuous] 

# group name prefix 
group_prefix = continuous

# single series max time in seconds(s) or minutes (m)
# if run "duration" longer than series max time
# then run is splitted in multiple series
# number of series within group = total duration / series max time
# Recommendation: < 30 minutes data chunks/series
series_max_time = 20m

# split even/odd series (for blinding purpose)
split_series = False

# Beginning/end of series didv
# (didv config based on "didv" field)
# A short list (comma separated) of specific detector channels
# can be specified with didv_detector_channel (keep commented or all
# for all channels selected with run_daq
add_series_start_didv = False
add_series_end_didv = False
didv_run_time = 60s
didv_detector_channels = all


# trace length in millisec (ms) or  seconds (s)
# Alternatively use "nb_samples"
trace_length = 10s
# nb_samples = 12500000


# sample rate
sample_rate = 1250000

# voltage min/max
voltage_min = -5
voltage_max = 5



[didv]
# sample rate [Hz]
sample_rate = 1250000

# number of cycles test signal -> trace length
nb_cycles = 4.1

# voltage range (volts)
voltage_min = -10
voltage_max = 10


# Signal generator
# IMPORTANT: comment parameters below to use current settings

# signal generator amplitude in mVpp
signal_gen_voltage = 2

# frequency in Hz
signal_gen_frequency =  50



[randoms] 
# group name prefix 
group_prefix = randoms

# trace length in millisec (ms) or  seconds (s)
# Alternatively use "nb_samples"
trace_length = 100ms

# sample rate
sample_rate = 1250000

# voltage min/max
voltage_min = -5
voltage_max = 5



