[setup] 

# Facility number: 1 = McKinsey Leiden Fridge, 2 = Pyle Cryoconcept Fridge, 3 = UMass
facility = 1

# raw data path 
data_path = ./

# directory to save figures from pulse display (.png, .npy)
#fig_data_path = /data/operation


# fridge run
fridge_run = 10

# electronics constants (inside the fridge)
# required: 
#    -Magnicon: "shunt_resistance"  and  "squid_turn_ratio"
#    -CDMS FEB: "shunt_resistance", "squid_turn_ratio", and "feedback_resistance"

# shunt resistance [Ohms]
shunt_resistance = 0.02

# SQUID Loop turn ratio
squid_turn_ratio = 2.4


# type of instruments used 
squid_controller = magnicon
signal_generator = magnicon
temperature_controller = lakeshore


# ADC list
enable_adc = adc1

# database (FIXME -> Not implemented yet)
enable_redis = false
enable_sql = false

# readback instrument values (FIXME -> Not implemented yet)
enable_readback = false



[adc1]
device_name  = Dev1
trigger_channel = pfi0

# NI ADC connection information

# Format: string array for each ADC channel used [0:7]
#   Controller ->  "controller:[name]_[channel]" (REQUIRED)
#   TES wiring ->  "tes:[channel]  (OPTIONAL if same as controller channel)
#   Detector   ->  "detector:[name]_[channel]" (REQUIRED)
connection0 = controller:magnicon_1, detector:PD2
connection1 = controller:magnicon_2, detector:G124_PAS2
connection2 = controller:magnicon_3, detector:G124_PBS1


# default adc settings 
sample_rate = 1250000 
nb_samples = 8192
voltage_min = -5
voltage_max = 5
channel_list = 0-7 
trigger_type = 3




# detector config  for each ADC connection
# (ONLY IF DETECTOR CONTROL DISABLED!)
# List of most useful parameters for pytesdaq scope and RQpy processing
#     tes_bias: [uAmps]
#     close_loop_norm: Output gain * feedback resistance [Ohms] * squid_turn_ratio
#     open_loop_norm:  Output gain * Preamp gain
#     signal_gen_current:  [uAmps]
#     signal_gen_frequency: [Hz]

# EXAMPLE
#detector_config0 = tes_bias:30, close_loop_norm:124000, signal_gen_current:10, signal_gen_frequency:40
#detector_config1 = tes_bias:30, close_loop_norm:124000, signal_gen_current:10, signal_gen_frequency:40
#detector_config2 = tes_bias:30, close_loop_norm:124000, signal_gen_current:10, signal_gen_frequency:40
		 





[polaris_daq]
lib = /usr/lib/libnidaq.so
#lib = /data/polaris_daq/nidaq/lib/libnidaq.so
fcn = NIdaq
enable = true 
next = recorder


[polaris_recorder]
lib = /usr/lib/libnidaq.so
#lib = /data/DAQ/nidaq/lib/libnidaq.so
#lib = /data/polaris_daq/nidaq/lib/libnidaq.so
fcn = HDF5Recorder
enable = true
next = daq


[redis]
enable = false
host = 127.0.0.1
port = 6379
password = None
data_stream = NIstream



[magnicon]
# Details of remote connection
hostname = 128.32.239.62
username = mckinseyleidenfridge
port = 22
# auth_method = rsa; can be dss or password
rsa_key = /share/.ssh/id_rsa
log_file = /share/pytesdaq/squid.log
exe_location = C:\Users\McKinseyLeidenFridge\GitRepos\pytesdaq\pytesdaq\instruments\magnicon\dll
channel_list = 1,2,3
default_active = 1
reset_active = 1


[feb]
visa_address = GPIB0::18::INSTR

# FEBs, each FEB has 4 channels (A,B,C,D)
# Format: subrack, slot
feb1 = 1,3
feb2 = 1,7


[signal_generators]
keysight_address = TCPIP::192.168.0.4::5025::SOCKET


[temperature_controllers]
lakeshore_address =  TCPIP::192.168.0.3::7777::SOCKET



